# Task ID: 3
# Title: 기본 인증 시스템 구현
# Status: pending
# Dependencies: 1, 2
# Priority: high
# Description: JWT 기반 인증 및 소셜 로그인(Google, Kakao, GitHub) 구현
# Details:
Node.js(Express)에서 JWT 토큰 발급/검증 로직 구현, passport.js 또는 직접 OAuth2 클라이언트로 소셜 로그인 연동. HTTPS 적용 및 토큰 관리 보안 강화.

# Test Strategy:
회원가입, 로그인, 소셜 로그인, 토큰 검증 테스트

# Subtasks:
## 1. JWT 기반 인증 로직 구현 [pending]
### Dependencies: None
### Description: JWT(Json Web Token)를 이용한 인증 로직을 서버에 구현합니다. 사용자 인증 시 토큰을 발급하고, 요청 시 토큰을 검증하는 미들웨어를 작성합니다.
### Details:
JWT 토큰 생성, 검증 함수 작성 및 미들웨어 적용. 사용자 정보와 토큰 페이로드 설계.

## 2. 소셜 로그인(Google, Kakao, GitHub) 연동 [pending]
### Dependencies: 3.1
### Description: Google, Kakao, GitHub OAuth2 인증을 연동하여 소셜 로그인을 구현합니다.
### Details:
각 소셜 서비스의 OAuth2 클라이언트 등록, 인증 요청 및 콜백 처리, 사용자 정보 획득 및 JWT 발급 연동.

## 3. passport.js 또는 OAuth2 클라이언트 설정 [pending]
### Dependencies: 3.2
### Description: passport.js 또는 직접 OAuth2 클라이언트 라이브러리를 설정하여 인증 전략을 구성합니다.
### Details:
passport.js 설치 및 각 소셜 로그인 전략(Google, Kakao, GitHub) 등록, serialize/deserializeUser 구현.

## 4. HTTPS 적용 [pending]
### Dependencies: 3.3
### Description: 서버에 HTTPS를 적용하여 인증 및 데이터 전송 시 보안을 강화합니다.
### Details:
SSL 인증서 준비 및 서버에 적용, 개발/운영 환경별 HTTPS 설정.

## 5. 토큰 관리 및 보안 강화 [pending]
### Dependencies: 3.4
### Description: JWT 토큰의 저장, 만료, 갱신, 탈취 방지 등 보안 강화를 위한 정책을 적용합니다.
### Details:
토큰 만료시간 설정, refresh token 도입, 토큰 저장 위치(HTTPOnly 쿠키 등) 결정, CSRF/XSS 방지.

## 6. 회원가입/로그인/토큰 검증 테스트 [pending]
### Dependencies: 3.5
### Description: 회원가입, 로그인, 토큰 검증 등 전체 인증 플로우에 대한 테스트를 수행합니다.
### Details:
단위 테스트 및 통합 테스트 작성, 정상/비정상 케이스 검증, 소셜 로그인 및 JWT 인증 동작 확인.

