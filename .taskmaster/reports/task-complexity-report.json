{
	"meta": {
		"generatedAt": "2025-10-25T08:32:00.890Z",
		"tasksAnalyzed": 11,
		"totalTasks": 15,
		"analysisCount": 15,
		"thresholdScore": 5,
		"projectName": "Taskmaster",
		"usedResearch": true
	},
	"complexityAnalysis": [
		{
			"taskId": 1,
			"taskTitle": "프로젝트 저장소 및 초기 환경 설정",
			"complexityScore": 6,
			"recommendedSubtasks": 6,
			"expansionPrompt": "Git 저장소 생성, 프론트엔드(React 18 + TypeScript + Bootstrap 5) 프로젝트 초기화, 백엔드(Node.js 18 + Express 4) 프로젝트 초기화, PostgreSQL 환경 설정, Redis 환경 설정, Vercel 및 Railway 배포 환경 준비로 세분화하세요.",
			"reasoning": "여러 기술 스택의 초기화와 배포 환경까지 포함되어 있어 단순한 작업보다 복잡도가 높음. 각 환경별로 독립적인 세팅과 테스트가 필요하므로 최소 6개 이상의 세부 작업으로 분할이 적합함."
		},
		{
			"taskId": 2,
			"taskTitle": "데이터베이스 스키마 설계 및 구현",
			"complexityScore": 7,
			"recommendedSubtasks": 5,
			"expansionPrompt": "사용자, 문제, 리그, 통계 테이블 스키마 설계 및 생성, Redis 세션/캐싱 설정, 각 테이블별 CRUD 쿼리 작성 및 테스트로 세분화하세요.",
			"reasoning": "여러 테이블의 설계와 구현, Redis 연동까지 포함되어 있어 논리적 설계와 실제 구현, 테스트가 모두 필요함. 각 테이블별로 분리 및 Redis 별도 작업이 필요."
		},
		{
			"taskId": 3,
			"taskTitle": "기본 인증 시스템 구현",
			"complexityScore": 8,
			"recommendedSubtasks": 6,
			"expansionPrompt": "JWT 기반 인증 로직 구현, 소셜 로그인(Google, Kakao, GitHub) 연동, passport.js 또는 OAuth2 클라이언트 설정, HTTPS 적용, 토큰 관리 보안 강화, 회원가입/로그인/토큰 검증 테스트로 세분화하세요.",
			"reasoning": "다양한 인증 방식과 보안 요소, 외부 서비스 연동이 포함되어 있어 복잡도가 높음. 각 인증 방식별로 별도 구현과 테스트가 필요."
		},
		{
			"taskId": 4,
			"taskTitle": "프로필 및 온보딩 설문조사 구현",
			"complexityScore": 6,
			"recommendedSubtasks": 4,
			"expansionPrompt": "프로필 관리 UI 구현, 설문조사 폼(4단계) 구현, 설문 결과 백엔드 저장 API 구현, 프로필/설문 조회 및 수정 테스트로 세분화하세요.",
			"reasoning": "프론트엔드와 백엔드가 모두 관여하며, 설문조사 단계별 UI와 데이터 저장 로직이 필요해 중간 수준의 복잡도."
		},
		{
			"taskId": 5,
			"taskTitle": "레벨테스트 시스템 구현",
			"complexityScore": 7,
			"recommendedSubtasks": 7,
			"expansionPrompt": "레벨테스트 시스템의 프론트엔드(React UI), 백엔드(결과 분석, 레벨 배정), 데이터 저장, 테스트 자동화, 접근성, 반응형 디자인, 예외 처리 등으로 세분화하세요.",
			"reasoning": "프론트엔드와 백엔드 모두에서 복합적인 로직(시력검사식 UI, 결과 분석, 레벨 배정)이 요구되며, 데이터 저장과 테스트, 접근성, 반응형 등 다양한 품질 요소가 포함되어 있어 중상급 복잡도입니다."
		},
		{
			"taskId": 6,
			"taskTitle": "문제 해결 시스템(레벨별 인터페이스) 구현",
			"complexityScore": 8,
			"recommendedSubtasks": 8,
			"expansionPrompt": "레벨별 UI(블록코딩, 빈칸채우기, 코드에디터) 세부 기능, 문제 제출/평가 로직, 상태 관리, 데이터 연동, 테스트 자동화, 접근성, 반응형, 에러 처리 등으로 세분화하세요.",
			"reasoning": "레벨별로 완전히 다른 인터페이스와 평가 로직이 필요하며, 각 UI의 복잡도와 데이터 흐름, 평가 알고리즘, 테스트 등 다양한 기술적 난이도가 높아 고난도 작업입니다."
		},
		{
			"taskId": 7,
			"taskTitle": "출석체크 및 진도 관리 시스템 구현",
			"complexityScore": 6,
			"recommendedSubtasks": 6,
			"expansionPrompt": "백엔드 출석 기록, 프론트엔드 UI, 진도 그래프, 데이터 동기화, 테스트 자동화, 예외 처리 등으로 세분화하세요.",
			"reasoning": "출석 기록, 진도 시각화, 데이터 동기화 등 백엔드와 프론트엔드가 모두 관여하며, 데이터 일관성과 UI/UX가 중요해 중간 이상의 복잡도를 가집니다."
		},
		{
			"taskId": 8,
			"taskTitle": "경험치 및 레벨 시스템 구현",
			"complexityScore": 6,
			"recommendedSubtasks": 6,
			"expansionPrompt": "경험치 계산, 레벨업 로직, UI 표시, 데이터 동기화, 테스트 자동화, 예외 처리 등으로 세분화하세요.",
			"reasoning": "경험치 분배 알고리즘, 레벨업 조건, UI 실시간 반영, 데이터 동기화 등 여러 계층의 로직이 필요하지만, 표준적인 게임 시스템 패턴이므로 중간 난이도입니다."
		},
		{
			"taskId": 9,
			"taskTitle": "리그전 시스템 구현",
			"complexityScore": 8,
			"recommendedSubtasks": 9,
			"expansionPrompt": "주간 리그 생성, 리그 관리, 실시간 랭킹(Socket.io), 프론트엔드 UI, 랭킹 UI, 데이터 동기화, 테스트 자동화, 예외 처리, 보안 등으로 세분화하세요.",
			"reasoning": "주기적 리그 생성, 실시간 랭킹 동기화, 다양한 상태 관리, 복잡한 UI, 실시간 통신 등 고난도 백엔드와 프론트엔드 기술이 모두 요구됩니다."
		},
		{
			"taskId": 10,
			"taskTitle": "환급제 시스템 구현",
			"complexityScore": 7,
			"recommendedSubtasks": 7,
			"expansionPrompt": "외부 결제 연동, 출석률 추적, 환급 조건, 자동 환급 처리, 데이터 동기화, 통합 테스트, 예외/오류 처리 등으로 세분화하세요.",
			"reasoning": "외부 결제 시스템 연동, 출석률 기반 환급 로직, 자동화 처리, 데이터 일관성 등 다양한 외부/내부 시스템 연계와 예외 처리가 필요해 복잡도가 높습니다."
		},
		{
			"taskId": 11,
			"taskTitle": "문제 평가 및 신고 시스템 구현",
			"complexityScore": 5,
			"recommendedSubtasks": 5,
			"expansionPrompt": "평가 UI, 점수 저장, 신고 기능, 관리자 알림, 테스트 및 예외 처리 등으로 세분화하세요.",
			"reasoning": "평가 및 신고 기능은 비교적 단순하지만, 데이터 저장, 관리자 알림, 예외 처리 등 기본적인 백엔드/프론트엔드 연동이 필요해 중간 수준입니다."
		},
		{
			"taskId": 12,
			"taskTitle": "OpenAI 기반 문제 생성 엔진 연동",
			"complexityScore": 7,
			"recommendedSubtasks": 7,
			"expansionPrompt": "OpenAI API 연동, 프롬프트 설계, 문제 생성 로직, 문제 저장소 연동, 품질 검증, 테스트 자동화, 예외 처리 등으로 세분화하세요.",
			"reasoning": "외부 AI API 연동, 프롬프트 설계, 데이터 저장, 품질 검증 등 다양한 기술적 요소와 예외 상황 대응이 필요해 복잡도가 높습니다."
		},
		{
			"taskId": 13,
			"taskTitle": "학습 패턴 분석 및 통계 대시보드 구현",
			"complexityScore": 6,
			"recommendedSubtasks": 6,
			"expansionPrompt": "학습 기록 분석, 약점 진단, 성장 그래프, 대시보드 UI, 데이터 동기화, 테스트 및 예외 처리 등으로 세분화하세요.",
			"reasoning": "데이터 분석, 시각화, 대시보드 UI 등 다양한 기술이 필요하지만, 표준적인 분석/시각화 패턴이므로 중간 난이도입니다."
		},
		{
			"taskId": 14,
			"taskTitle": "PWA 및 모바일 퍼스트 UI 최적화",
			"complexityScore": 5,
			"recommendedSubtasks": 5,
			"expansionPrompt": "PWA 환경설정, 반응형 디자인, 터치 UI, 모바일 테스트, 접근성 및 예외 처리 등으로 세분화하세요.",
			"reasoning": "PWA 설정과 모바일 UI 최적화는 표준화된 절차가 많아 비교적 단순하지만, 다양한 기기 대응과 테스트가 필요해 중간 이하 난이도입니다."
		},
		{
			"taskId": 15,
			"taskTitle": "모니터링 및 에러 추적 시스템 구축",
			"complexityScore": 4,
			"recommendedSubtasks": 4,
			"expansionPrompt": "Google Analytics 연동, Sentry 연동, 백엔드 로그/에러 추적, 통합 테스트 및 예외 처리 등으로 세분화하세요.",
			"reasoning": "외부 서비스 연동과 기본적인 로그/에러 추적 환경 설정이 주된 작업으로, 복잡도는 낮은 편입니다."
		}
	]
}